<div class="row">

    <div class="col">
        <h2 class="text-center">@_searchDay. </h2>
        <table class="table table-striped">
            <thead class="table-dark">
                <tr>
                    <th>Mission</th>
                    <th>In Progress</th>
                    <th>Is Done</th>
                    <th>Actions</th>
                </tr>
            </thead>
            @if (_tasks == null)
            {
                <div class="row">No data</div>
            }
            else
            {
                if (_tasks.Count == 0)
                {
                    <div class="row">LOADING....</div>
                }
                else
                    @foreach (var item in _tasks)
                    {
                        <tbody>
                            <tr>
                                <td>@item.Name</td>
                                <td><input type="checkbox" @bind="item.InProgress" /></td>
                                <td><input type="checkbox" @bind="item.IsDone" /></td>
                                <td><button class="btn btn-danger" @onclick="(() => DeleteTask(item))">Delete Task</button></td>
                            </tr>
                        </tbody>
                    }
                }
        </table>
    </div>
</div>


@code {
    [Parameter]
    public List<TaskItem> _tasks { get; set; }

    //public EventCallback<List<TaskItem>> addNewTaskEvent += ;

    private static string _searchDay = string.Empty;

    //protected override async Task OnInitializedAsync()
    //{
    //    //await Task.Delay(2000);
    //    _tasks = await TaskListDB.GetItem("Monday");
    //}


    private void AddNewTaskToList()
    {

        _tasks.Add(new TaskItem("Take breakfast"));
        /*_newTask = ""; */// string.Empty;

    }

    private void DeleteTask(TaskItem item)
    {
        _tasks.Remove(item);
    }
}
