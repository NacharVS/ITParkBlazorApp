<div class="row">

    <div class="col">
        <h2 class="text-center">@_searchDay. </h2>
        <table class="table table-striped">
            <thead class="table-dark">
                @if (_tasks != null)
                {
                    <tr>
                        <th>Mission</th>
                        <th>In Progress</th>
                        <th>Is Done</th>
                        <th>Actions</th>
                    </tr>
                }
                else
                {
                    <tr>
                        <th>Name</th>
                        <th>Surname</th>
                        <th>Phone</th>
                    </tr>
                }
            </thead>
            @if (_tasks != null)
            {
                <GenericTemplate Items="_tasks">
                    <ItemTemplate Context="item">
                        <td>@item.Name</td>
                        <td><input type="checkbox" @bind="item.InProgress" /></td>
                        <td><input type="checkbox" @bind="item.IsDone" /></td>
                        <td><button class="btn btn-danger" @onclick="(() => DeleteTask(item))">Delete Task</button></td>
                    </ItemTemplate>
                </GenericTemplate>
            }
            else
            {
                <GenericTemplate Items="_users">
                    <ItemTemplate Context="item">
                        <td>@item.Name</td>
                        <td>@item.SurName</td>
                        <td>@item.PhoneNumber</td>
                    </ItemTemplate>
                </GenericTemplate>
            }
        </table>
    </div>
</div>


@code {
    [Parameter]
    public List<TaskItem> _tasks { get; set; }
    [Parameter]
    public List<User> _users { get; set; }

    [Parameter] public RenderFragment ListNull { get; set; }
    [Parameter] public RenderFragment ListEmpty{ get; set; }

    //public EventCallback<List<TaskItem>> addNewTaskEvent += ;

    private static string _searchDay = string.Empty;

    //protected override async Task OnInitializedAsync()
    //{
    //    //await Task.Delay(2000);
    //    _tasks = await TaskListDB.GetItem("Monday");
    //}


    private void AddNewTaskToList()
    {

        _tasks.Add(new TaskItem("Take breakfast"));
        /*_newTask = ""; */// string.Empty;

    }

    private void DeleteTask(TaskItem item)
    {
        _tasks.Remove(item);
    }
}
