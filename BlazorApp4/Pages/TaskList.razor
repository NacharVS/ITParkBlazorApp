@page "/tasklist"

<div class="container-fluid">
    <div class="row">
        <div class="col col-auto">
            <table class="table table-striped">
                <thead class="table table-danger">
                    <tr>
                        <th><input class="form-control" placeholder="Input day" @bind-value="_searchDay" /></th>
                        <th><button class="btn btn-dark">Show</button></th>
                        <th><input type="checkbox" @bind-value="_isAdmin">Admin</th>
                        <th><button class="btn btn-danger" @onclick="SetActive">Actions</button></th>
                        <th><button class="btn btn-dark">Clear</button></th>
                    </tr>
                </thead>
            </table>
        </div>
    </div>


    <TaskTable _tasks="list2" />


    <ActionsWithTasks actions="_isActive" isAdmin="_isAdmin"/>

</div>


@code {

    private bool _isActive;
    private bool _isAdmin;

    private void SetActive()
    {
        _isActive = !_isActive;
    }
    private string _day;

    private static string _searchDay = string.Empty;

    private string _newTask;

    private List<TaskItem> list2 = TaskListDB.GetItem("Monday").GetAwaiter().GetResult();


    //protected override async Task OnInitializedAsync()
    //{
    //    list = await TaskListDB.GetItem("Thuesday");
    //}

    private void AddNewTaskToList()
    {
        //if (!string.IsNullOrEmpty(_newTask))
        //{
        //    _tasks.Add(new TaskItem(_newTask));
        //    _newTask = ""; // string.Empty;
        //}
    }


    private void AddToDB()
    {
        //if (!string.IsNullOrEmpty(_day))
        //{
        //    TaskListDB.AddItem(new TaskListDB(_tasks), _day);
        //}
        //_day = string.Empty;
    }

    //private void GetList()
    //{
    //    _tasks = TaskListDB.GetItem(_searchDay);
    //}
}
